name: Build and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  FORCE_COLOR: 1

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libattr1-dev libfuse3-dev fuse3 pkg-config

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install macfuse pkg-config

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*

          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"

          CIBW_BEFORE_ALL_LINUX: |
            yum update -y && 
            yum install -y fuse3-devel pkgconfig || 
            (apt-get update && apt-get install -y libfuse3-dev pkg-config)
          
          CIBW_BEFORE_ALL_MACOS: |
            brew install macfuse pkg-config || true

          CIBW_BEFORE_BUILD: |
            pip install setuptools cython
            python setup.py build_cython

          CIBW_TEST_REQUIRES: pytest pytest-trio trio
          CIBW_TEST_COMMAND: python -c "import pyfuse3; print('pyfuse3 imported successfully')"

          CIBW_ENVIRONMENT_LINUX: PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig"
          CIBW_ENVIRONMENT_MACOS: PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libattr1-dev libfuse3-dev fuse3 pkg-config

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools cython build

      - name: Build Cython files
        run: python setup.py build_cython

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish_to_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-24.04
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/pyfuse3
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish_to_testpypi:
    name: Publish to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyfuse3
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
